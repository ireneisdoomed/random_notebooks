CREATE TABLE association_by_datasource_direct(datatypeId VARCHAR, datasourceId VARCHAR, diseaseId VARCHAR, targetId VARCHAR, score DOUBLE, evidenceCount BIGINT);;

CREATE TABLE association_by_datasource_indirect(datatypeId VARCHAR, datasourceId VARCHAR, diseaseId VARCHAR, targetId VARCHAR, score DOUBLE, evidenceCount BIGINT);;

CREATE TABLE association_by_datatype_direct(diseaseId VARCHAR, targetId VARCHAR, datatypeId VARCHAR, score DOUBLE, evidenceCount BIGINT);;

CREATE TABLE association_by_datatype_indirect(diseaseId VARCHAR, targetId VARCHAR, datatypeId VARCHAR, score DOUBLE, evidenceCount BIGINT);;

CREATE TABLE association_by_overall_indirect(diseaseId VARCHAR, targetId VARCHAR, score DOUBLE, evidenceCount BIGINT);;

CREATE TABLE association_overall_direct(diseaseId VARCHAR, targetId VARCHAR, score DOUBLE, evidenceCount BIGINT);;

CREATE TABLE biosample(biosampleId VARCHAR, biosampleName VARCHAR, description VARCHAR, xrefs VARCHAR[], synonyms VARCHAR[], parents VARCHAR[], ancestors VARCHAR[], children VARCHAR[], descendants VARCHAR[]);;

CREATE TABLE colocalisation_coloc(leftStudyLocusId VARCHAR, rightStudyLocusId VARCHAR, chromosome VARCHAR, rightStudyType VARCHAR, numberColocalisingVariants BIGINT, h0 DOUBLE, h1 DOUBLE, h2 DOUBLE, h3 DOUBLE, h4 DOUBLE, colocalisationMethod VARCHAR, betaRatioSignAverage DOUBLE);;

CREATE TABLE colocalisation_ecaviar(leftStudyLocusId VARCHAR, rightStudyLocusId VARCHAR, chromosome VARCHAR, rightStudyType VARCHAR, numberColocalisingVariants BIGINT, clpp DOUBLE, colocalisationMethod VARCHAR, betaRatioSignAverage DOUBLE);;

CREATE TABLE credible_set(studyLocusId VARCHAR, studyId VARCHAR, variantId VARCHAR, chromosome VARCHAR, "position" INTEGER, region VARCHAR, beta DOUBLE, zScore DOUBLE, pValueMantissa FLOAT, pValueExponent INTEGER, effectAlleleFrequencyFromSource FLOAT, standardError DOUBLE, subStudyDescription VARCHAR, qualityControls VARCHAR[], finemappingMethod VARCHAR, credibleSetIndex INTEGER, credibleSetlog10BF DOUBLE, purityMeanR2 DOUBLE, purityMinR2 DOUBLE, locusStart INTEGER, locusEnd INTEGER, sampleSize INTEGER, ldSet STRUCT(tagVariantId VARCHAR, r2Overall DOUBLE)[], locus STRUCT(is95CredibleSet BOOLEAN, is99CredibleSet BOOLEAN, logBF DOUBLE, posteriorProbability DOUBLE, variantId VARCHAR, pValueMantissa FLOAT, pValueExponent INTEGER, beta DOUBLE, standardError DOUBLE, r2Overall DOUBLE)[], confidence VARCHAR, studyType VARCHAR, isTransQtl BOOLEAN);;

CREATE TABLE disease(id VARCHAR, code VARCHAR, "name" VARCHAR, description VARCHAR, dbXRefs VARCHAR[], parents VARCHAR[], synonyms STRUCT(hasExactSynonym VARCHAR[], hasRelatedSynonym VARCHAR[], hasNarrowSynonym VARCHAR[], hasBroadSynonym VARCHAR[]), obsoleteTerms VARCHAR[], obsoleteXRefs VARCHAR[], children VARCHAR[], ancestors VARCHAR[], therapeuticAreas VARCHAR[], descendants VARCHAR[], ontology STRUCT(isTherapeuticArea BOOLEAN, leaf BOOLEAN, sources STRUCT(url VARCHAR, "name" VARCHAR)));;

CREATE TABLE disease_hpo(id VARCHAR, "name" VARCHAR, description VARCHAR, dbXRefs VARCHAR[], parents VARCHAR[], obsoleteTerms VARCHAR[]);;

CREATE TABLE disease_phenotype(disease VARCHAR, phenotype VARCHAR, evidence STRUCT(aspect VARCHAR, bioCuration VARCHAR, diseaseFromSourceId VARCHAR, diseaseFromSource VARCHAR, diseaseName VARCHAR, evidenceType VARCHAR, frequency VARCHAR, modifiers VARCHAR[], onset VARCHAR[], qualifier VARCHAR, qualifierNot BOOLEAN, "references" VARCHAR[], sex VARCHAR, resource VARCHAR)[]);;

CREATE TABLE drug_indication(id VARCHAR, indications STRUCT(disease VARCHAR, efoName VARCHAR, "references" STRUCT(source VARCHAR, ids VARCHAR[])[], maxPhaseForIndication DOUBLE)[], approvedIndications VARCHAR[], indicationCount INTEGER);;

CREATE TABLE drug_mechanism_of_action(actionType VARCHAR, mechanismOfAction VARCHAR, chemblIds VARCHAR[], targetName VARCHAR, targetType VARCHAR, targets VARCHAR[], "references" STRUCT(source VARCHAR, ids VARCHAR[], urls VARCHAR[])[]);;

CREATE TABLE drug_molecule(id VARCHAR, canonicalSmiles VARCHAR, inchiKey VARCHAR, drugType VARCHAR, blackBoxWarning BOOLEAN, "name" VARCHAR, yearOfFirstApproval BIGINT, maximumClinicalTrialPhase DOUBLE, parentId VARCHAR, hasBeenWithdrawn BOOLEAN, isApproved BOOLEAN, tradeNames VARCHAR[], synonyms VARCHAR[], crossReferences MAP(VARCHAR, VARCHAR[]), childChemblIds VARCHAR[], linkedDiseases STRUCT("rows" VARCHAR[], count INTEGER), linkedTargets STRUCT("rows" VARCHAR[], count INTEGER), description VARCHAR);;

CREATE TABLE drug_warning(chemblIds VARCHAR[], toxicityClass VARCHAR, country VARCHAR, description VARCHAR, id BIGINT, "references" STRUCT(ref_id VARCHAR, ref_type VARCHAR, ref_url VARCHAR)[], warningType VARCHAR, "year" BIGINT, efo_term VARCHAR, efo_id VARCHAR, efo_id_for_warning_class VARCHAR);;

CREATE TABLE evidence(datasourceId VARCHAR, targetId VARCHAR, alleleOrigins VARCHAR[], allelicRequirements VARCHAR[], ancestry VARCHAR, ancestryId VARCHAR, beta DOUBLE, betaConfidenceIntervalLower DOUBLE, betaConfidenceIntervalUpper DOUBLE, biologicalModelAllelicComposition VARCHAR, biologicalModelGeneticBackground VARCHAR, biologicalModelId VARCHAR, biomarkerName VARCHAR, biomarkers STRUCT(geneExpression STRUCT(id VARCHAR, "name" VARCHAR)[], geneticVariation STRUCT(functionalConsequenceId VARCHAR, id VARCHAR, "name" VARCHAR)[]), biosamplesFromSource VARCHAR[], cellType VARCHAR, clinicalPhase DOUBLE, clinicalSignificances VARCHAR[], clinicalStatus VARCHAR, cohortDescription VARCHAR, cohortId VARCHAR, cohortPhenotypes VARCHAR[], cohortShortName VARCHAR, confidence VARCHAR, contrast VARCHAR, crisprScreenLibrary VARCHAR, datatypeId VARCHAR, diseaseCellLines STRUCT(id VARCHAR, "name" VARCHAR, tissue VARCHAR, tissueId VARCHAR)[], diseaseFromSource VARCHAR, diseaseFromSourceId VARCHAR, diseaseFromSourceMappedId VARCHAR, diseaseModelAssociatedHumanPhenotypes STRUCT(id VARCHAR, "label" VARCHAR)[], diseaseModelAssociatedModelPhenotypes STRUCT(id VARCHAR, "label" VARCHAR)[], drugFromSource VARCHAR, drugId VARCHAR, drugResponse VARCHAR, geneticBackground VARCHAR, literature VARCHAR[], log2FoldChangePercentileRank BIGINT, log2FoldChangeValue DOUBLE, mutatedSamples STRUCT(functionalConsequenceId VARCHAR, numberMutatedSamples DOUBLE, numberSamplesTested DOUBLE, numberSamplesWithMutationType BIGINT)[], oddsRatio DOUBLE, oddsRatioConfidenceIntervalLower DOUBLE, oddsRatioConfidenceIntervalUpper DOUBLE, pValueExponent BIGINT, pValueMantissa DOUBLE, pathways STRUCT(id VARCHAR, "name" VARCHAR)[], projectId VARCHAR, reactionId VARCHAR, reactionName VARCHAR, releaseDate VARCHAR, releaseVersion VARCHAR, resourceScore DOUBLE, sex VARCHAR[], significantDriverMethods VARCHAR[], statisticalMethod VARCHAR, statisticalMethodOverview VARCHAR, statisticalTestTail VARCHAR, studyCases BIGINT, studyCasesWithQualifyingVariants BIGINT, studyId VARCHAR, studyOverview VARCHAR, studySampleSize BIGINT, studyStartDate VARCHAR, studyStopReason VARCHAR, studyStopReasonCategories VARCHAR[], targetFromSource VARCHAR, targetFromSourceId VARCHAR, targetInModel VARCHAR, targetInModelEnsemblId VARCHAR, targetInModelMgiId VARCHAR, targetModulation VARCHAR, urls STRUCT(niceName VARCHAR, url VARCHAR)[], variantAminoacidDescriptions VARCHAR[], variantFromSourceId VARCHAR, variantFunctionalConsequenceId VARCHAR, variantHgvsId VARCHAR, variantId VARCHAR, variantRsId VARCHAR, pmcIds VARCHAR[], publicationYear BIGINT, studyLocusId VARCHAR, textMiningSentences STRUCT(dEnd BIGINT, dStart BIGINT, section VARCHAR, tEnd BIGINT, tStart BIGINT, "text" VARCHAR)[], diseaseId VARCHAR, id VARCHAR, score DOUBLE, variantEffect VARCHAR, directionOnTrait VARCHAR, sourceId VARCHAR);;

CREATE TABLE expression(id VARCHAR, tissues STRUCT(efo_code VARCHAR, "label" VARCHAR, organs VARCHAR[], anatomical_systems VARCHAR[], rna STRUCT("value" DOUBLE, zscore INTEGER, "level" INTEGER, unit VARCHAR), protein STRUCT(reliability BOOLEAN, "level" INTEGER, cell_type STRUCT("name" VARCHAR, reliability BOOLEAN, "level" INTEGER)[]))[]);;

CREATE TABLE go(id VARCHAR, "name" VARCHAR);;

CREATE TABLE interaction(sourceDatabase VARCHAR, targetA VARCHAR, intA VARCHAR, intABiologicalRole VARCHAR, targetB VARCHAR, intB VARCHAR, intBBiologicalRole VARCHAR, speciesA STRUCT(mnemonic VARCHAR, scientific_name VARCHAR, taxon_id BIGINT), speciesB STRUCT(mnemonic VARCHAR, scientific_name VARCHAR, taxon_id BIGINT), count BIGINT, scoring DOUBLE);;

CREATE TABLE interaction_evidence(hostOrganismScientificName VARCHAR, hostOrganismTaxId BIGINT, expansionMethodShortName VARCHAR, targetB VARCHAR, evidenceScore DOUBLE, participantDetectionMethodB STRUCT(miIdentifier VARCHAR, shortName VARCHAR)[], intBBiologicalRole VARCHAR, interactionResources STRUCT(databaseVersion VARCHAR, sourceDatabase VARCHAR), interactionDetectionMethodShortName VARCHAR, intA VARCHAR, intBSource VARCHAR, interactionTypeMiIdentifier VARCHAR, expansionMethodMiIdentifier VARCHAR, speciesB STRUCT(mnemonic VARCHAR, scientificName VARCHAR, taxonId BIGINT), interactionIdentifier VARCHAR, speciesA STRUCT(mnemonic VARCHAR, scientificName VARCHAR, taxonId BIGINT), intASource VARCHAR, hostOrganismTissue STRUCT(fullName VARCHAR, shortName VARCHAR, xrefs VARCHAR[]), intB VARCHAR, pubmedId VARCHAR, intABiologicalRole VARCHAR, participantDetectionMethodA STRUCT(miIdentifier VARCHAR, shortName VARCHAR)[], interactionScore DOUBLE, interactionTypeShortName VARCHAR, targetA VARCHAR, interactionDetectionMethodMiIdentifier VARCHAR);;

CREATE TABLE known_drug(drugId VARCHAR, targetId VARCHAR, diseaseId VARCHAR, phase DOUBLE, status VARCHAR, urls STRUCT(niceName VARCHAR, url VARCHAR)[], ancestors VARCHAR[], "label" VARCHAR, approvedSymbol VARCHAR, approvedName VARCHAR, targetClass VARCHAR[], prefName VARCHAR, tradeNames VARCHAR[], synonyms VARCHAR[], drugType VARCHAR, mechanismOfAction VARCHAR, targetName VARCHAR);;

CREATE TABLE l2g_prediction(studyLocusId VARCHAR, geneId VARCHAR, score DOUBLE, features STRUCT("name" VARCHAR, "value" FLOAT, shapValue FLOAT)[], shapBaseValue FLOAT);;

CREATE TABLE literature(pmid VARCHAR, pmcid VARCHAR, date DATE, "year" INTEGER, "month" INTEGER, "day" INTEGER, keywordId VARCHAR, relevance DOUBLE, keywordType VARCHAR);;

CREATE TABLE literature_vector(category VARCHAR, word VARCHAR, norm DOUBLE, vector DOUBLE[]);;

CREATE TABLE mouse_phenotype(biologicalModels STRUCT(allelicComposition VARCHAR, geneticBackground VARCHAR, id VARCHAR, literature VARCHAR[])[], modelPhenotypeClasses STRUCT(id VARCHAR, "label" VARCHAR)[], modelPhenotypeId VARCHAR, modelPhenotypeLabel VARCHAR, targetFromSourceId VARCHAR, targetInModel VARCHAR, targetInModelEnsemblId VARCHAR, targetInModelMgiId VARCHAR);;

CREATE TABLE openfda_significant_adverse_drug_reactions(chembl_id VARCHAR, "event" VARCHAR, count BIGINT, llr DOUBLE, critval DOUBLE, meddraCode VARCHAR);;

CREATE TABLE openfda_significant_adverse_target_reactions(targetId VARCHAR, "event" VARCHAR, count BIGINT, llr DOUBLE, critval DOUBLE, meddraCode VARCHAR);;

CREATE TABLE pharmacogenomics(datasourceId VARCHAR, datasourceVersion VARCHAR, datatypeId VARCHAR, directionality VARCHAR, evidenceLevel VARCHAR, genotype VARCHAR, genotypeAnnotationText VARCHAR, genotypeId VARCHAR, haplotypeFromSourceId VARCHAR, haplotypeId VARCHAR, literature VARCHAR[], pgxCategory VARCHAR, phenotypeFromSourceId VARCHAR, phenotypeText VARCHAR, studyId VARCHAR, targetFromSourceId VARCHAR, variantFunctionalConsequenceId VARCHAR, variantRsId VARCHAR, variantId VARCHAR, isDirectTarget BOOLEAN, drugs STRUCT(drugFromSource VARCHAR, drugId VARCHAR)[]);;

CREATE TABLE reactome(id VARCHAR, "label" VARCHAR, ancestors VARCHAR[], descendants VARCHAR[], children VARCHAR[], parents VARCHAR[], path VARCHAR[][]);;

CREATE TABLE so(id VARCHAR, "label" VARCHAR);;

CREATE TABLE study(studyId VARCHAR, geneId VARCHAR, projectId VARCHAR, studyType VARCHAR, traitFromSource VARCHAR, traitFromSourceMappedIds VARCHAR[], biosampleFromSourceId VARCHAR, pubmedId VARCHAR, publicationTitle VARCHAR, publicationFirstAuthor VARCHAR, publicationDate VARCHAR, publicationJournal VARCHAR, backgroundTraitFromSourceMappedIds VARCHAR[], initialSampleSize VARCHAR, nCases INTEGER, nControls INTEGER, nSamples INTEGER, cohorts VARCHAR[], ldPopulationStructure STRUCT(ldPopulation VARCHAR, relativeSampleSize DOUBLE)[], discoverySamples STRUCT(sampleSize INTEGER, ancestry VARCHAR)[], replicationSamples STRUCT(sampleSize INTEGER, ancestry VARCHAR)[], qualityControls VARCHAR[], analysisFlags VARCHAR[], summarystatsLocation VARCHAR, hasSumstats BOOLEAN, condition VARCHAR, sumstatQCValues MAP(VARCHAR, FLOAT), diseaseIds VARCHAR[], backgroundDiseaseIds VARCHAR[], biosampleId VARCHAR);;

CREATE TABLE target(id VARCHAR, approvedSymbol VARCHAR, biotype VARCHAR, transcriptIds VARCHAR[], canonicalTranscript STRUCT(id VARCHAR, chromosome VARCHAR, "start" BIGINT, "end" BIGINT, strand VARCHAR), canonicalExons VARCHAR[], genomicLocation STRUCT(chromosome VARCHAR, "start" BIGINT, "end" BIGINT, strand INTEGER), alternativeGenes VARCHAR[], approvedName VARCHAR, go STRUCT(id VARCHAR, source VARCHAR, evidence VARCHAR, aspect VARCHAR, geneProduct VARCHAR, ecoId VARCHAR)[], hallmarks STRUCT(attributes STRUCT(pmid BIGINT, description VARCHAR, attribute_name VARCHAR)[], cancerHallmarks STRUCT(pmid BIGINT, description VARCHAR, impact VARCHAR, "label" VARCHAR)[]), synonyms STRUCT("label" VARCHAR, source VARCHAR)[], symbolSynonyms STRUCT("label" VARCHAR, source VARCHAR)[], nameSynonyms STRUCT("label" VARCHAR, source VARCHAR)[], functionDescriptions VARCHAR[], subcellularLocations STRUCT("location" VARCHAR, source VARCHAR, termSL VARCHAR, labelSL VARCHAR)[], targetClass STRUCT(id BIGINT, "label" VARCHAR, "level" VARCHAR)[], obsoleteSymbols STRUCT("label" VARCHAR, source VARCHAR)[], obsoleteNames STRUCT("label" VARCHAR, source VARCHAR)[], "constraint" STRUCT(constraintType VARCHAR, score FLOAT, exp FLOAT, obs INTEGER, oe FLOAT, oeLower FLOAT, oeUpper FLOAT, upperRank INTEGER, upperBin INTEGER, upperBin6 INTEGER)[], tep STRUCT(targetFromSourceId VARCHAR, description VARCHAR, therapeuticArea VARCHAR, url VARCHAR), proteinIds STRUCT(id VARCHAR, source VARCHAR)[], dbXrefs STRUCT(id VARCHAR, source VARCHAR)[], chemicalProbes STRUCT(control VARCHAR, drugId VARCHAR, id VARCHAR, isHighQuality BOOLEAN, mechanismOfAction VARCHAR[], origin VARCHAR[], probeMinerScore BIGINT, probesDrugsScore BIGINT, scoreInCells BIGINT, scoreInOrganisms BIGINT, targetFromSourceId VARCHAR, urls STRUCT(niceName VARCHAR, url VARCHAR)[])[], homologues STRUCT(speciesId VARCHAR, speciesName VARCHAR, homologyType VARCHAR, targetGeneId VARCHAR, isHighConfidence VARCHAR, targetGeneSymbol VARCHAR, queryPercentageIdentity DOUBLE, targetPercentageIdentity DOUBLE, priority INTEGER)[], tractability STRUCT(modality VARCHAR, id VARCHAR, "value" BOOLEAN)[], safetyLiabilities STRUCT("event" VARCHAR, eventId VARCHAR, effects STRUCT(direction VARCHAR, dosing VARCHAR)[], biosamples STRUCT(cellFormat VARCHAR, cellLabel VARCHAR, tissueId VARCHAR, tissueLabel VARCHAR)[], datasource VARCHAR, literature VARCHAR, url VARCHAR, studies STRUCT(description VARCHAR, "name" VARCHAR, "type" VARCHAR)[])[], pathways STRUCT(pathwayId VARCHAR, pathway VARCHAR, topLevelTerm VARCHAR)[], tss BIGINT);;

CREATE TABLE target_essentiality(id VARCHAR, geneEssentiality STRUCT(depMapEssentiality STRUCT(screens STRUCT(cellLineName VARCHAR, depmapId VARCHAR, diseaseCellLineId VARCHAR, diseaseFromSource VARCHAR, expression DOUBLE, geneEffect DOUBLE, mutation VARCHAR)[], tissueId VARCHAR, tissueName VARCHAR)[], isEssential BOOLEAN)[]);;

CREATE TABLE target_prioritisation(targetId VARCHAR, isInMembrane INTEGER, isSecreted INTEGER, hasSafetyEvent INTEGER, hasPocket INTEGER, hasLigand INTEGER, hasSmallMoleculeBinder INTEGER, geneticConstraint DOUBLE, paralogMaxIdentityPercentage DOUBLE, mouseOrthologMaxIdentityPercentage DOUBLE, isCancerDriverGene INTEGER, hasTEP INTEGER, mouseKOScore DOUBLE, hasHighQualityChemicalProbes INTEGER, maxClinicalTrialPhase DOUBLE, tissueSpecificity DOUBLE, tissueDistribution DOUBLE);;

CREATE TABLE variant(variantId VARCHAR, chromosome VARCHAR, "position" INTEGER, referenceAllele VARCHAR, alternateAllele VARCHAR, variantEffect STRUCT("method" VARCHAR, assessment VARCHAR, score FLOAT, assessmentFlag VARCHAR, targetId VARCHAR, normalisedScore DOUBLE)[], mostSevereConsequenceId VARCHAR, transcriptConsequences STRUCT(variantFunctionalConsequenceIds VARCHAR[], aminoAcidChange VARCHAR, uniprotAccessions VARCHAR[], isEnsemblCanonical BOOLEAN, codons VARCHAR, distanceFromFootprint BIGINT, distanceFromTss BIGINT, appris VARCHAR, maneSelect VARCHAR, targetId VARCHAR, impact VARCHAR, lofteePrediction VARCHAR, siftPrediction FLOAT, polyphenPrediction FLOAT, consequenceScore FLOAT, transcriptIndex INTEGER, approvedSymbol VARCHAR, biotype VARCHAR, transcriptId VARCHAR)[], rsIds VARCHAR[], hgvsId VARCHAR, alleleFrequencies STRUCT(populationName VARCHAR, alleleFrequency DOUBLE)[], dbXrefs STRUCT(id VARCHAR, source VARCHAR)[], variantDescription VARCHAR);;

